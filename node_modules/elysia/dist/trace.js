export const createTraceListener=(e,n)=>async function(s){let r=s.id;if("request"===s.event&&"begin"===s.type){let a=e(),t=()=>{let e,n;let s=-1,r=[],a=[],t=!1,o=new Promise(n=>{e=e=>{t||(t=!0,n(e))}}),i=!1,c=new Promise(e=>{n=n=>{if(!i){for(i=!0,-1===s&&(s=0);s<a.length;s++){let e;let n={name:"anonymous",time:performance.now(),skip:!0,end:new Promise(n=>{n(e)}),children:[]};e=performance.now(),r[s](n)}e(n)}}});return{signal:o,consumeChild(e){switch(e.type){case"begin":let n=r[++s];// Child may cause early return
    n?n({name:e.name,time:e.time,skip:!1,end:new Promise(e=>{a.push(e)})}):(this.resolve(),console.log("SKIP"));break;case"end":a[s]?.(e.time)}},consume(s){switch(s.type){case"begin":let a=[],t=s.unit??0;for(let e=0;e<t;e++){let e;a.push(new Promise(n=>{e=n})),r.push(e)}e({// Begin always have name
    name:s.name,time:s.time,skip:!1,end:c,children:a});break;case"end":n(s.time)}},resolve(){let s;if(t&&i)return;let r={name:"anonymous",time:performance.now(),skip:!0,end:new Promise(e=>{e(s)}),children:[]};s=performance.now(),e(r),n(s)}}},o=t(),i=t(),c=t(),l=t(),m=t(),u=t(),d=t(),b=t();o.consume(s);let f=e=>{if(e.id===r)switch(e.event){case"request":o.consume(e);break;case"request.unit":o.consumeChild(e);break;case"parse":i.consume(e);break;case"parse.unit":i.consumeChild(e);break;case"transform":c.consume(e);break;case"transform.unit":c.consumeChild(e);break;case"beforeHandle":l.consume(e);break;case"beforeHandle.unit":l.consumeChild(e);break;case"handle":m.consume(e);break;case"afterHandle":u.consume(e);break;case"afterHandle.unit":u.consumeChild(e);break;case"error":d.consume(e);break;case"error.unit":d.consumeChild(e);break;case"response":"begin"===e.type?(o.resolve(),i.resolve(),c.resolve(),l.resolve(),m.resolve(),u.resolve(),d.resolve()):a.off("event",f),b.consume(e);break;case"response.unit":b.consumeChild(e)}};a.on("event",f),await n({id:s.id,// @ts-ignore
    context:s.ctx,// @ts-ignore
    set:s.ctx?.set,// @ts-ignore
    store:s.ctx?.store,time:s.time,request:o.signal,parse:i.signal,transform:c.signal,beforeHandle:l.signal,handle:m.signal,afterHandle:u.signal,error:d.signal,response:b.signal}),a.emit(`res${r}`,void 0)}};